$  cd /home/moshiur/Documents/GitHub/ReviewSysOpSystemsRepo ; /usr/bin/env /usr/lib/jvm/java-19-openjdk-amd64/bin/java --enable-preview -XX:+ShowCodeDetailsInExceptionMessages -cp /home/moshiur/.config/Code/User/workspaceStorage/1275ce722f43fd9e5e1ef1b194158b33/redhat.java/jdt_ws/ReviewSysOpSystemsRepo_55ccbeb4/bin lab4_2sh4.TestMatrices 
Test constructor1--invalid inputs: (-1,2)
0  0
0  0
0  0


[I@7ad041f3
Test constructor1--invalid inputs: (1,0)
0  0  0


Test constructor1--valid inputs: (3,4)
0  0  0  0
0  0  0  0
0  0  0  0


Test constructor2-- 4-by-5 array
1  1  1  1  1
2  2  2  8  2
0  0  1  7  1
0  0  0  1  1


Test getElement(1,3), Note that Indices begin with 0
8
Test getElement(10,2), invalid indexes
java.lang.IndexOutOfBoundsException: Invalid indexs

Test subMatrix(), valid inputs: (2,3)
1  1  1
2  2  2


Test subMatrix(), invalid inputs: (3,6)
java.lang.ArithmeticException: Submatrix not defined.

Test isUpperTr(), return true
1  2  3  4
0  5  6  7
0  0  8  0

true

Test isUpperTr(), return false
2  0  0  0
0  9  6  8
5  0  4  4
0  0  0  9

false

2  0  0  0  4
0  2  1  1  4
0  0  2  1  4
0  0  0  2  6

Test addTo() -- invalid operation
5  4  5
1  4  4
0  0  2
1  2  1

Test addTo() -- valid operation
5  4  5
2  6  7
0  0  2
2  4  2

Test sum() -- invalid operation
java.lang.ArithmeticException: Not all the matrix have the same dimensions!

Test sum() -- valid operation
3  -2  5
2  1  -2

Test costructor1--invalid input
0  

Test costructor1--valid input
0  0  0  0  
0  0  0  0  
0  0  0  0  
0  0  0  0  

0  0  0  0  0  0  0  0  0  0  


Test costructor2
1  1  1  1  1  
0  2  2  2  2  
0  0  3  3  3  
0  0  0  4  4  
0  0  0  0  5  

1  1  1  1  1  2  2  2  2  3  3  3  4  4  5  

Test costructor2
java.lang.IllegalArgumentException: Supplied matrix is not an upper triangular matrix!



Test getDim()
5
6

Test getElement() - valid positions
1  1  1  1  1  
0  2  2  2  2  
0  0  3  3  3  
0  0  0  4  4  
0  0  0  0  5  

Test getElement() - invalid position 
java.lang.IndexOutOfBoundsException: Invalid indexs

Test setElement() - valid positions
1  1  1  1  1  
0  2  2  7  2  
0  0  3  3  3  
0  0  0  4  4  
0  0  0  0  5  

1  2  3  4  5  6  
0  7  8  9  9  9  
0  0  3  3  3  3  
0  0  0  4  4  4  
0  0  0  0  9  5  
0  0  0  0  0  7  
Test setElement() - invalid position 
java.lang.IndexOutOfBoundsException: Invalid indexs

Test setElement() - attempt to put a non-zero value in the lower part 
java.lang.IllegalArgumentException: Invalid indexs
Pay attention! This is an upper triangular matrix!

Test fullMatrix()
1  1  1  1  1
0  2  2  2  2
0  0  3  3  3
0  0  0  4  4
0  0  0  0  5

9  9  9
0  8  8
0  0  7

Test m4.getDet() -- valid operation
504

Test effSolve() -- invalid operation
java.lang.IllegalArgumentException: The dimension of B must match dimension N!

Test effSolve() -- valid operation
[-0.1527777777777778, -0.1964285714285714, 0.5714285714285714]

Test effSolve() -- invalid operation
java.lang.IllegalArgumentException: The determinant is 0 (at least one of the elements in the main diagnonal has a 0!)

2
[[1, 2, 3], [1, 2, 3], [1, 2, 532]]
[[1, 2, 3], [1, 2, 3], [1, 2, 532]]
[[1, 2, 3], [1, 2, 3], [1, 2, 69]]
[[1, 2, 3], [1, 2, 3], [1, 2, 532]]
[[1, 2, 3], [1, 2, 3], [1, 2, 69]]
newmat2 is
[[2, 3, 4], [2, 3, 4], [2, 3, 70]]
Creating a subMatrix
newmat5 is
[[2, 3], [2, 3]]
[[2, 3], [2, 3]]
1  1  1
1  1  1
1  1  1

Moshiur
5  5  5
5  5  5
5  5  5
5  5  5

Result of mat6.isUpperTr(): true
Result of mat7.isUpperTr(): true
Result of mat8.isUpperTr(): true
1  4  1  9  0  3  
1
4
1
9
0
3
69
1  4  1  
0  9  0  
0  0  69  

1  4  1
0  9  0
0  0  69

Actual answer: 
1.5797101449275364  0.3333333333333333  0.08695652173913043  Expected answer: 
1.579710 0.333333 0.086957

***********************
1  2  3  4
0  5  6  7
0  0  8  9
0  0  0  10

Actual answer: 
1.0350000000000001  -0.33000000000000007  0.07500000000000007  0.6  
Expected answer: 
1.035000 -0.330000 0.075000 0.600000

***********************
0  2  3  4
0  5  6  7
0  0  8  9
0  0  0  10

test case 40
java.lang.IllegalArgumentException: The determinant is 0 (at least one of the elements in the main diagnonal has a 0!)
0  
1
0
java.lang.IndexOutOfBoundsException: Invalid indexs
0

0  2  3  4
0  5  6  7
0  0  8  9
0  0  0  10

java.lang.IndexOutOfBoundsException: Invalid indexs